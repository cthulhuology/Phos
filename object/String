String.prototype.last = function() { 
	return this.substring(this.length-1) 
}

String.prototype.first = function() { 
	return this.substring(0,1) 
}

String.prototype.decode = function() { 
	return unescape(this) 
}

String.prototype.encode = function() { 
	return escape(this) 
}

String.prototype.append = function() {
	var retval = this
	for (var i = 0; i < arguments.length; ++i) retval += arguments[i].toString()
	return retval 
}

String.prototype.contains = function(S) { 
	return 0 <= this.indexOf(S) 
}

String.prototype.name = function() { 
	return this 
}

String.prototype.eval = function() {
	var R = false
	var Args = Array.prototype.slice.apply(arguments,0)
	var F = Function.prototype.constructor.apply(window,[ 'return ('.append(this,')') ])
	try {
		R = F.apply(window,Args)
	} catch(E) {
		R = E
	}
	return R	
}
